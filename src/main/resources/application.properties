
#Seteando en 'VARIABLE DE ENTORNO' desde el: 'DOCKER-FILE'
spring.application.name=${NOMBRE_MICROSERVICIO}

ws.nombre.servicio=MICROSERVICIO [${NOMBRE_MICROSERVICIO}]

#ACCESO 'ZIPKIN' & 'SLEUTH' (CLIENTE), trazabilidad DISTRIBUIDA:
#spring.zipkin.baseUrl=http://localhost:9411
#spring.zipkin.baseUrl=http://capacitacion.microservicios.zipkin-server
spring.zipkin.baseUrl=${ZIPKIN_URL}


#ACCESO: ---------- [BOOT-ADMIN]' (CLIENTE) --------------# 
#spring.boot.admin.client.url=http://localhost:8080
#spring.boot.admin.client.url=http://capacitacion.microservicios.boot-admin-server
spring.boot.admin.client.url=${BOOTADMIN_URL}
spring.boot.admin.security.enabled=false

#Configuracion para Conectar a SBA: 
spring.boot.admin.client.username=${BOOTADMIN_USUARIO}
spring.boot.admin.client.password=${BOOTADMIN_PASSWORD}

#Credenciales de 'BASIC AUTHENTICATION' (para ACTIVAR es requerdio descomentar: 'spring-boot-starter-security'): 
#spring.security.user.name=${BOOTADMIN_USUARIO}
#spring.security.user.password=${BOOTADMIN_PASSWORD}

#Credenciales par la conecion con ACTUATOR: 
spring.boot.admin.client.instance.metadata.user.name=${BOOTADMIN_USUARIO}
spring.boot.admin.client.instance.metadata.user.password=${BOOTADMIN_PASSWORD}

#URLs CONEXION: 'ACTUATOR' => 'BOOT-ADMIN':
spring.boot.admin.client.instance.management-url=${SERVICE_DNS_URL}/actuator
spring.boot.admin.client.instance.management-base-url=${SERVICE_DNS_URL}
spring.boot.admin.client.instance.service-url=${SERVICE_DNS_URL}
spring.boot.admin.client.instance.health-url=${SERVICE_DNS_URL}/actuator/health
#---------------------------------------------------------#


#CONFIGURACION 'ORACLE': 
#IMPORTANTE: 'oracle-external-ip' es un 'ENDPOINT'. 
spring.datasource.jdbc-url=jdbc:oracle:thin:@oracle-external-ip:1521:XE 
spring.datasource.username=${ORACLE_USUARIO}
spring.datasource.password=${ORACLE_PASSWORD}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
    
#CONFIGURACION: 
propiedades.oracle.owner=CGUERRA

propiedades.oracle.empleados.package=PKG_EMPLEADOS
propiedades.oracle.empleados.procedure01=SP_REGISTRAR_EMPLEADOS
propiedades.oracle.empleados.procedure02=SP_LISTAR_EMPLEADOS
propiedades.oracle.empleados.procedure03=SP_ELIMINAR_EMPLEADOS
propiedades.oracle.empleados.procedure04=SP_LISTAR_EMPLEADOS_X_DEPARTAMENTO

propiedades.oracle.departamentos.package=PKG_DEPARTAMENTOS
propiedades.oracle.departamentos.procedure01=SP_REGISTRAR_DEPARTAMENTOS
propiedades.oracle.departamentos.procedure02=SP_LISTAR_DEPARTAMENTOS
propiedades.oracle.departamentos.procedure03=SP_ELIMINAR_DEPARTAMENTOS
propiedades.oracle.departamentos.procedure04=SP_LISTAR_DEPARTAMENTOS_X_ORGANIZACION

propiedades.oracle.organizaciones.package=PKG_ORGANIZACIONES
propiedades.oracle.organizaciones.procedure01=SP_REGISTRAR_ORGANIZACIONES
propiedades.oracle.organizaciones.procedure02=SP_LISTAR_ORGANIZACIONES
propiedades.oracle.organizaciones.procedure03=SP_ELIMINAR_ORGANIZACIONES

#TIEMPO EN SEGUNDOS: 
propiedades.oracle.timeout=10


#CONFIG-MAPs: IMPORTANTE, para el 'config' 3 cosas deben ser IGUALES: los 2 nombres deben ser igual al: 'spring.application.name' & al NOMBRE asignado al 'ConfigMap'.  
spring.cloud.kubernetes.config.name=${NOMBRE_MICROSERVICIO}
spring.cloud.kubernetes.config.namespace=default
spring.cloud.kubernetes.config.sources[0].name=${NOMBRE_MICROSERVICIO}

spring.cloud.kubernetes.reload.enabled=true
spring.cloud.kubernetes.reload.mode=polling
spring.cloud.kubernetes.reload.period=1000

management.endpoint.restart.enabled=true
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true


#Configuracion de 'ACTUATOR' ==> para 'MICROMETER/PROMETHEUS/GRAFANA': 
endpoints.health.sensitive=true
endpoints.metrics.sensitive=true

management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoints.enabled-by-default=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.metrics.export.prometheus.enabled=true
management.metrics.enable.jvm=true
management.security.enabled=false

#JEAGER: IMPORTANTE: NO se ve pero el 'PUERTO' (14268) debe estar abierto en DEPLOYMENT & facilitar su acceso por 'INGRESS'. 
opentracing.jaeger.service-name=${NOMBRE_MICROSERVICIO}
opentracing.jaeger.http-sender.url=${JEAGER_URL}

#SWAGGER DOCUMENTATION: 
springfox.documentation.swagger.v2.path=/API_${NOMBRE_MICROSERVICIO}

#ELASTICSEARCH [LOGs]
logging.level.root=info
logging.pattern.console=[%level] [%d{dd-MM-yyyy HH:mm:ss.SSS}] [%thread] | %msg%n
logging.file=${RUTA_LOG}/${NOMBRE_MICROSERVICIO}.log

